<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-
2.dtd">

<sqlMap namespace="Friend">

	<resultMap id="FriendList" class="Member">
		<result property="userId" column="user_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="me2DayKey" column="me2day_key" />
	</resultMap>

	<resultMap id="requestList" class="Friendship">
		<result property="userId" column="user_id" />
		<result property="friendId" column="friend_id" />
		<result property="status" column="status" />
	</resultMap>

	<resultMap id="messageList" class="Message">
		<result property="messageId" column="message_id" />
		<result property="userId" column="user_id" />
		<result property="friendId" column="friend_id" />
		<result property="title" column="title" />
		<result property="contents" column="contents" />
		<result property="messageDate" column="message_date" />
		<result property="readNum" column="read_num" />
		<result property="type" column="message_type" />
	</resultMap>

	<resultMap id="statusList" class="FriendStatus">
		<result property="userId" column="user_id" />
		<result property="friendId" column="friend_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="status" column="status" />
	</resultMap>

	<resultMap id="bookmarkship" class="BookMarkShip">
		<result property="bookMarkId" column="bookmark_id" />
		<result property="bookMarkName" column="bookmark_name" />
		<result property="bookMarkUrl" column="bookmark_url" />
		<result property="bookMarkDescript" column="bookmark_descript" />
		<result property="userId" column="user_id" />
		<result property="friendId" column="friend_id" />
		<result property="status" column="status" />
	</resultMap>

	<select id="getFriendList" parameterClass="Friendship" resultClass="Member">
    	select m.user_id userId, m.name name, m.email email, m.img_url imgUrl
    	from member_info m, friendship f
    	where (f.user_id=#userId# AND m.user_id=f.friend_id AND f.status=#status#) OR (f.friend_id=#userId# AND m.user_id=f.user_id AND f.status=#status#) 
  	</select>
  	
  	<select id="sendFriendReqList" parameterClass="Friendship" resultClass="Friendship">
		SELECT friend_id friendId, friendship_id friendshipId
		FROM friendship
		WHERE
		user_id=#userId# AND status=#status#;
	</select>
	
	<select id="takeFriendReqList" parameterClass="Friendship" resultClass="Friendship">
		SELECT user_id userId, friendship_id friendshipId
		FROM friendship
		WHERE
		friend_id=#friendId# AND status=#status#;
	</select>
	
	<select id="outWebList" parameterClass="String" resultClass="BookMarkShip">
    	select bookmark_id bookMarkId, bookmark_url bookMarkUrl, bookmark_name bookMarkName, friend_id friendId
    	from bookmarkship
    	where user_id=#userId#
  	</select>
  	
  	<select id="inWebList" parameterClass="String" resultClass="BookMarkShip">
    	select bookmark_id bookMarkId, bookmark_url bookMarkUrl, bookmark_name bookMarkName, bookmark_descript bookMarkDescript, user_id userId, friend_id friendId
    	from bookmarkship
    	where friend_id=#userId#
  	</select>
  	
  	<select id="getKey" parameterClass="String" resultClass="Member">
    	select me2day_key me2DayKey 
    	from member_info
    	where user_id=#userId#
  	</select>
  	
  	<insert id="bookMarkRecommand" parameterClass="BookMarkShip">
		INSERT INTO	bookmarkship 
		(bookmark_name, bookmark_url, bookmark_descript, user_id, friend_id, status)
		VALUES (#bookMarkName#, #bookMarkUrl#, #bookMarkDescript#, #userId#, #friendId#, #status#)
	</insert>
  	  	
  	<select id="bookMarkExist" parameterClass="BookMarkShip" resultClass="BookMarkShip">
		SELECT bookmark_url bookMarkUrl, user_id userId, friend_id friendId
		FROM bookmarkship
		WHERE
		user_id=#userId# AND friend_id=#friendId# AND bookmark_url=#bookMarkUrl#;
	</select>
	
  	<select id="outBox" parameterClass="Message" resultClass="Message">
    	select message_id messageId, user_id userId, friend_id friendId, title title, contents contents, message_date messageDate
    	from message
    	where user_id=#userId# AND message_type=#type#
  	</select>
  	
  	<select id="inBox" parameterClass="Message" resultClass="Message">
    	select message_id messageId, user_id userId, friend_id friendId, title title, contents contents, message_date messageDate, read_num readNum
    	from message
    	where friend_id=#userId# AND message_type=#type# 
  	</select>
  	
  	<select id="newMessageNum" parameterClass="Message" resultClass="Message">
    	select *
    	from message 
    	WHERE message_type=#type# AND read_num=#readNum# AND friend_id=#userId#
  	</select>
  	
  	<insert id="sendMessage" parameterClass="Message">
		INSERT INTO message
		(user_id, friend_id, title, contents, message_date, message_type)
		VALUES (#userId#, #friendId#, #title#, #contents#, #messageDate#, #type#)
	</insert>
 	
	<delete id="deleteFriend" parameterClass="Friendship">
		delete from friendship
		WHERE (user_id=#userId# AND friend_id=#friendId# AND status=#status#)
		OR (user_id=#friendId# AND friend_id=#userId# AND status=#status#)
	</delete>
	
	<update id="accept" parameterClass="Friendship">
		update friendship
		set
		status=#status#
		where user_id=#userId# AND friend_id=#friendId#
	</update>

	<delete id="reject" parameterClass="Friendship">
		delete from friendship
		WHERE
		user_id=#userId# AND friend_id=#friendId#
	</delete>

	<delete id="cancel" parameterClass="Friendship">
		delete from friendship
		WHERE
		user_id=#userId# AND friend_id=#friendId#
	</delete>
	
	<delete id="bookMarkCancel" parameterClass="String">
		delete from bookmarkship
		WHERE
		bookmark_id=#bookMarkId#
	</delete>
	
	<select id="getFriendStatus" parameterClass="FriendStatus" resultClass="FriendStatus">
		SELECT f.user_id userId, f.friend_id friendId, m.name name, m.email email, f.status status
		FROM member_info m, friendship f
		WHERE
		(m.user_id=f.friend_id AND (m.user_id IN (SELECT friend_id FROM
		friendship WHERE user_id=#userId# AND friend_id=#friendId#) ) )
		OR
		(m.user_id=f.user_id AND (m.user_id IN (SELECT user_id FROM
		friendship
		WHERE friend_id=#userId# AND user_id=#friendId#) ) )
	</select>
	
	<select id="getMemberById" parameterClass="User" resultClass="Member">
		SELECT user_id userId, name name
		FROM member_info
		WHERE user_id not in (#loginId#) and user_id LIKE CONCAT('%', #keyword#, '%')
	</select>
	
	<insert id="insertFriend" parameterClass="Friendship">
		insert into friendship
		(user_id, friend_id, status)
		values (#userId#, #friendId#, #status#)
	</insert>
	
	<delete id="deleteMessage" parameterClass="String">
		delete from message 
    	WHERE message_id=#messageId#
	</delete>
	
	<select id="getMessage" parameterClass="String" resultClass="Message">
    	select message_id messageId, user_id userId, friend_id friendId, title title, contents contents, message_date messageDate, read_num readNum
    	from message
    	where message_id=#messageId#
  	</select>
   	
   <update id="updateMessage" parameterClass="Message">
		update message
		set
		read_num=#readNum#
		where message_id=#messageId#
	</update>
   	
   	<select id="me2dayFriend" parameterClass="String" resultClass="Member">
    	select user_id userId, name name
    	from member_info
    	where user_id=#userId#
  	</select>
</sqlMap>